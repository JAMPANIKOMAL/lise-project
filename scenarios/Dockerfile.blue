# Dockerfile.blue: Defines the environment for the "Web Command Injection" scenario.

# Start from a lightweight Python base image
FROM python:3.9-slim

# Set the working directory inside the container
WORKDIR /app

# Copy the vulnerable application from our project into the container's /app/ directory
# The 'vulnerable_app.py' file should be in the root of the 'lise-project' directory
# for this build context to work correctly.
COPY vulnerable_app.py .

# Install the only dependency, Flask
RUN pip install Flask

# Inform Docker that the container will listen on port 5000
EXPOSE 5000

# The command to execute when the container starts
CMD ["python3", "vulnerable_app.py"]
